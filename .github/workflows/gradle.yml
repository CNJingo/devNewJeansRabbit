## This workflow uses actions that are not certified by GitHub.
## They are provided by a third-party and are governed by
## separate terms of service, privacy policy, and support
## documentation.
## This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
## For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle
#
#name: Java CI with Gradle
#
#on:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
#
#permissions:
#  contents: read
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up JDK 11
#      uses: actions/setup-java@v1
#      with:
#        java-version: '11'
#        distribution: 'temurin'
#    - name: Build with Gradle
#      run: ./gradlew clean build
#
#    - name: Make Directory for deliver
#      run: mkdir deploy
#
#    - name: Copy Jar
#      run: cp ./build/libs/*.jar ./deploy/
#
#    - name: Make zip file
#      run: zip -r -qq -j ./devjeans-build.zip ./deploy
#
#    - name: Deliver to AWS S3
#      env:
#        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
#        AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
#      run: |
#        aws s3 cp \
#        --region ap-northeast-2 \
#        ./devjeans-build.zip s3://devjeans-cd/
#
#      # Deploy
#    - name: Deploy
#      env:
#        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#      run: |
#        aws deploy create-deployment \
#        --application-name devjeans \
#        --deployment-group-name devjeans-cd \
#        --file-exists-behavior OVERWRITE \
#        --s3-location bucket=devjeans-cd,bundleType=zip,key=devjeans-build.zip \
#        --region ap-northeast-2
